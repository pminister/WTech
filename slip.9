Q1

<!DOCTYPE html>
<html>
<head>
<title>validate</title>
</head>
<body>
<script>
function accept(){
var name = document.getElementById('name').value;
var pass = document.getElementById('pass').value;

if(!name){
alert("enter name properly");
return false;
}

if(!pass || pass.length<8){
alert("password must be 8 bit");
return false;
}

alert("Login successfully..!!");
return true;
}


</script>
<form method="post" onsubmit="return accept();">
<p>enter username :</p>
<input type="text" id="name" placeholder="name">
<p>enter password :</p>
<input type="text" id="pass" placeholder="password">

<input type="submit" name="submit">

<body>
</html>

Q2


Items=[‘item1’,’item2’,’item3’,’item4’]

Transactions = [    [‘item1’, ‘item2’, ‘item3’],
    [‘item2’, ‘item3’],
    [‘item1’, ‘item2’, ‘item4’],
    [‘item1’, ‘item4’],
    [‘item2’, ‘item3’, ‘item4’],
    [‘item1’, ‘item3’, ‘item4’],
    [‘item1’, ‘item2’],
    [‘item1’, ‘item3’],
    [‘item3’, ‘item4’],
    [‘item2’, ‘item4’]
]

From mlxtend.preprocessing import TransactionEncoder
From mlxtend.frequent_patterns import apriori, association_rules

# Convert the transactions into a binary matrix
Te = TransactionEncoder()
Te_ary = te.fit_transform(transactions)

# Convert the binary matrix into a pandas DataFrame
Df = pd.DataFrame(te_ary, columns=te.columns_)

# Generate frequent itemsets with a minimum support of 0.3
Frequent_itemsets = apriori(df, min_support=0.3, use_colnames=True)

# Generate association rules with a minimum confidence of 0.7
Association_rules = association_rules(frequent_itemsets, metric=”confidence”, min_threshold=0.7)

# Print the frequent itemsets and association rules
Print(frequent_itemsets)
Print(association_rules)